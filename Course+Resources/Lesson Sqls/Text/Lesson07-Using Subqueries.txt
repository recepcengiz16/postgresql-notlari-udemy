--------------------------------------------
--Single-Row Subqueries - Where
--------------------------------------------

SELECT * FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees)

SELECT title, length, rating
FROM film
WHERE length = (SELECT length FROM film WHERE title = 'Godfather Diary')

SELECT title, length, rating
FROM film
WHERE (length, rating) = 
      (SELECT length, rating FROM film WHERE title = 'Home Pity')

--------------------------------------------
--Single-Row Subqueries - Column
--------------------------------------------

SELECT
    first_name, last_name,
    department_name
FROM employees e
INNER JOIN departments d 
     ON d.department_id = e.department_id;

SELECT
    first_name,last_name,
    (
        SELECT department_name FROM departments d
        WHERE d.department_id = e.department_id
    ) dep_name
FROM employees e;

--------------------------------------------
--Single-Row Subqueries - Having
--------------------------------------------

SELECT department_id,
       COUNT(*) as emp_num
FROM employees e
GROUP BY department_id
HAVING COUNT(*) > 
    (
       SELECT COUNT(*) 
       FROM employees 
       WHERE department_id = 6
    )

--------------------------------------------
--Multiple-Row Subqueries - FROM
--------------------------------------------

select 
  e.first_name, e.last_name, 
  dl.department_name, dl.city, dl.state_province
from employees e, 
  (
    select 
      d.department_id, d.department_name, 
      l.city, l.state_province
    from departments d, locations l
    where d.location_id = l.location_id	
  ) dl
where e.department_id = dl.department_id

--------------------------------------------
--Multiple-Row Subqueries - IN
--------------------------------------------

SELECT * FROM employees
WHERE job_id IN 
    (
        SELECT job_id FROM jobs 
        WHERE 5000 between min_salary and max_salary
    )

SELECT customer_id, first_name, last_name
FROM customer
WHERE address_id IN 
    (
        SELECT address_id FROM address WHERE city_id IN 
        (
            SELECT city_id FROM city WHERE country_id = 50
        )
    )

SELECT film_id, title, rating
FROM film
WHERE
    film_id IN 
    (
        SELECT i.film_id
        FROM inventory i
        INNER JOIN rental r ON i.inventory_id = r.inventory_id
        WHERE
            r.rental_date BETWEEN '2005-05-25' AND '2005-05-26'
    );

--------------------------------------------
--Multiple-Row Subqueries – IN (Multiple Columns)
--------------------------------------------

SELECT title, rental_duration, length
FROM film gf
WHERE rating = 'G'
  AND (gf.rental_duration, gf.length) IN
  (
    SELECT lf.rental_duration, lf.length 
    FROM film lf
    WHERE length > 170
  )

--------------------------------------------
--Multiple-Row Subqueries - ANY
--------------------------------------------

SELECT
    first_name, last_name, salary
FROM employees
WHERE salary < ANY 
    (
        SELECT salary 
        FROM employees 
        WHERE job_id = 9
    )

SELECT category_id, MAX(length)
FROM film
INNER JOIN film_category USING(film_id)
GROUP BY category_id
ORDER BY 2

SELECT title, length
FROM film
WHERE length > ANY
(
    SELECT MAX(length)
    FROM film
    INNER JOIN film_category USING(film_id)
    GROUP BY category_id 
);

--------------------------------------------
--Multiple-Row Subqueries – ANY vs IN
--------------------------------------------

SELECT title, category_id
FROM film f, film_category c
WHERE
    1=1
    AND f.film_id = c.film_id
    AND category_id = ANY
    (
        SELECT category_id
        FROM category
        WHERE name in ('Animation', 'Games')
    );

--------------------------------------------
--Multiple-Row Subqueries - ALL
--------------------------------------------

SELECT first_name, last_name, salary
FROM employees
WHERE salary > ALL
    (
        SELECT salary
        FROM employees
        WHERE manager_id = 1
    )

SELECT film_id, title, length
FROM film
WHERE
    length <  
    (
        SELECT MIN(avg_length) FROM
        (
            SELECT ROUND(AVG(length), 2) avg_length
            FROM film
            GROUP BY rating
        ) sb
    )
ORDER BY 3;

--------------------------------------------
--EXISTS Operator
--------------------------------------------

SELECT first_name, last_name
FROM customer c
WHERE
    EXISTS 
    (
        SELECT 1
        FROM payment p
        WHERE p.customer_id = c.customer_id
    );

select * from departments d
where exists
  (
    select 1 from locations l
    where l.location_id = d.location_id
      and country_id in 
        (
           select country_id from countries
           where country_name = 'Canada'
        )
  )

--------------------------------------------
--NOT EXISTS Operator
--------------------------------------------

SELECT * FROM employees e
WHERE NOT EXISTS 
    (
        SELECT 1 FROM jobs j
        WHERE LOWER(job_title) LIKE '%manager%'
             AND j.job_id = e.job_id
    )

-----------------------------------------------------
--EXERCISE ANSWERS
-----------------------------------------------------

--------------------------------------------
--Single-Row Subqueries – Where
--------------------------------------------

SELECT city_id, city FROM city
WHERE country_id = 
(
    SELECT country_id FROM country WHERE country = 'Japan'
);

--------------------------------------------
--Single-Row Subqueries – Column
--------------------------------------------

select first_name, last_name,
  (
    select first_name || ' ' || last_name as parent_name
    from employees e
    where e.employee_id = d.employee_id
  )
from dependents d

--------------------------------------------
--Single-Row Subqueries – Having
--------------------------------------------

select department_id,
	(select department_name from departments ds 
	where ds.department_id = e.department_id) as dep_name,
	count(*) as emp_num
from employees e
group by department_id
having count(*) >
	(
		select count(*) from employees e
		where e. department_id = (select department_id 
		from departments d where department_name = 'IT')
	)
	
--Alternative

select e.department_id, department_name, count(*) as emp_num
from employees e
inner join departments ds on ds.department_id = e.department_id
group by e.department_id, department_name
having count(*) >
	(
		select count(*) from employees e
		where e. department_id = (select department_id 
		from departments d where department_name = 'IT')
	)

--------------------------------------------
--Multiple-Row Subqueries – IN
--------------------------------------------

--Exercise-1

SELECT film_id, title, rating
FROM film
WHERE 
	film id IN
	(
		SELECT i.film_id
		FROM inventory i
		WHERE i. inventory_id IN
		(
			SELECT r. inventory_id FROM rental r
			WHERE
				rental_date BETWEEN '2005-05-25' AND '2005-05-261'
		)
	);

--Exercise-2

SELECT * FROM employees e
WHERE e.employee_id in
(
	SELECT d.employee_id FROM dependents d
);

--Alternative

SELECT e.* FROM employees e
INNER JOIN dependents d ON e.employee_id = d.employee_id 

--------------------------------------------
--Multiple-Row Subqueries – ANY
--------------------------------------------

SELECT
    first_name, last_name, salary
FROM employees
WHERE salary <
    (
        SELECT MAX(salary) 
        FROM employees 
        WHERE job_id = 9
    )

--------------------------------------------
--Multiple-Row Subqueries – ALL 
--------------------------------------------

--Exercise-1

SELECT first_name, last_name, salary
FROM employees
WHERE salary >
    (
        SELECT MAX(salary)
        FROM employees
        WHERE manager_id = 100
    )

--Exercise-2

SELECT film_id, title, length
FROM film
WHERE
    length < ALL 
    (
        SELECT ROUND(AVG(length), 2)
        FROM film
        GROUP BY rating
    )
ORDER BY 3 DESC;

--------------------------------------------
--EXISTS Operator
--------------------------------------------

--Exercise-1

SELECT first_name, last_name
FROM customer c
WHERE c.customer_id IN 
    (
        SELECT p.customer_id
        FROM payment p
    );

--Exercise-2

SELECT * FROM employees
WHERE job_id IN 
    (
        SELECT job_id FROM jobs
        WHERE LOWER(job_title) LIKE '%manager%'
    )

SELECT * FROM employees e
WHERE EXISTS 
    (
        SELECT 1 FROM jobs j
        WHERE LOWER(job_title) LIKE '%manager%'
             AND j.job_id = e.job_id
    )
