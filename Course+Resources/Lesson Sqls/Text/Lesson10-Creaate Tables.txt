--------------------------------------------
--Creating a Table – Writing Scripts
--------------------------------------------

CREATE TABLE educations
(
    education_id SERIAL PRIMARY KEY,
    education_name VARCHAR(100) NOT NULL UNIQUE,
    description VARCHAR(500),
    start_date DATE,
    end_date DATE
)

--------------------------------------------

CREATE TABLE accounts 
(
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(70) UNIQUE NOT NULL,
    user_password VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    created_on TIMESTAMP NOT NULL DEFAULT CURRENT_DATE,
    last_login TIMESTAMP 
);

--------------------------------------------
--Creating a Table – Select Into
--------------------------------------------

SELECT f.film_id, f.title, c.name
    INTO TABLE film_with_category
FROM film f, film_category fc, category c
WHERE
    1=1
    AND f.rating = 'R'
    AND fc.film_id = f.film_id
    AND fc.category_id = c.category_id
ORDER BY title;

--------------------------------------------

SELECT film_id, title, length 
    INTO TEMP TABLE long_film
FROM film
WHERE length > 150
ORDER BY title;

--------------------------------------------
--Creating a Table – Create Table As (Query)
--------------------------------------------

CREATE TABLE horror_film AS
SELECT
    film_id, title,
    release_year,
    length, rating
FROM film
INNER JOIN film_category USING (film_id)
WHERE category_id = 11;

--------------------------------------------

CREATE TABLE IF NOT EXISTS 
    film_ratings (rating, film_count) AS 
SELECT rating, COUNT (film_id)
FROM film
GROUP BY rating;

--------------------------------------------
--Creating a Table – Create Table As (Table)
--------------------------------------------

CREATE TABLE movies_copy AS
TABLE movies;

--------------------------------------------

CREATE TABLE movies_copy2 AS
TABLE movies
WITH NO DATA;

--------------------------------------------

CREATE TABLE product_segment_new AS
TABLE product_segment
WITH NO DATA;

--------------------------------------------
--SERIAL pseudo-type
--------------------------------------------

CREATE TABLE colors2(
    colors_id SERIAL,
    color VARCHAR(30)
)

INSERT INTO colors2(colors_id, color)
VALUES(Default, 'Brown');

--------------------------------------------

pg_get_serial_sequence('table_name','column_name')

SELECT currval(pg_get_serial_sequence('colors2', 'colors_id'));

SELECT nextval(pg_get_serial_sequence('colors2', 'colors_id'));

--------------------------------------------
--SEQUENCE
--------------------------------------------

CREATE SEQUENCE sequence_temp
INCREMENT 10
START 100;

SELECT nextval('sequence_temp');

--------------------------------------------

CREATE SEQUENCE sequence_descending
INCREMENT -1
MINVALUE 1 
MAXVALUE 100
START 10
CYCLE;

SELECT nextval('sequence_descending');

--------------------------------------------
--SEQUENCE - Associated with a table column-1
--------------------------------------------

CREATE TABLE payment_details(
    payment_id SERIAL,
    item_id INT NOT NULL,
    item_text VARCHAR(50) NOT NULL,
    price DEC(10,2) NOT NULL,
    PRIMARY KEY(payment_id, item_id)
);

CREATE SEQUENCE sq_payment_item_id
START 10
INCREMENT 10
MINVALUE 10
OWNED BY payment_details.item_id;

INSERT INTO 
    payment_details(payment_id, item_id, item_text, price)
VALUES
    (100, nextval('sq_payment_item_id'),'Sofa',120),
    (100, nextval('sq_payment_item_id'),'Fridge',550),
    (100, nextval('sq_payment_item_id'),'Speaker',50),
    (101, nextval('sq_payment_item_id'),'Table',250),
    (101, nextval('sq_payment_item_id'),'Lamp',25);

--------------------------------------------
--SEQUENCE - Associated with a table column-2
--------------------------------------------

CREATE SEQUENCE sq_payment_item_id
START 10
INCREMENT 10
MINVALUE 10

CREATE TABLE payment_details(
    payment_id SERIAL,
    item_id INT NOT NULL DEFAULT nextval('sq_payment_item_id'),
    item_text VARCHAR(50) NOT NULL,
    price DEC(10,2) NOT NULL,
    PRIMARY KEY(payment_id, item_id)
);

ALTER SEQUENCE sq_payment_item_id
OWNED BY payment_details.item_id;

INSERT INTO 
    payment_details(payment_id, item_text, price)
VALUES
    (100,'Sofa',120),
    (100, 'Fridge',550),
    (100, 'Speaker',50),
    (101, 'Table',250),
    (101, 'Lamp',25);

