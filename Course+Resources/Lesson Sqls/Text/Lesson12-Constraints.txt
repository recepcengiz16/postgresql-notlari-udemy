--------------------------------------------
--Primary Key Constraint
--------------------------------------------

CREATE TABLE authors (
    author_id INT PRIMARY KEY,
    firstname VARCHAR (50),
    lastname VARCHAR (50)
);

CREATE TABLE products (
    product_no INTEGER,
    description TEXT,
    product_cost NUMERIC
);

ALTER TABLE products 
ADD PRIMARY KEY (product_no);

INSERT INTO authors
VALUES (1, 'Stephen', 'King'), (2, 'Agatha', 'Christie');

INSERT INTO authors
VALUES (2, 'Lev', 'Tolstoy');

--------------------------------------------

CREATE TABLE car_brands (
    brand_name VARCHAR(50)
);

INSERT INTO car_brands (brand_name)
VALUES
    ('Peugeot'),
    ('Mercedes'),
    ('Ford'),
    ('FIAT');
    
ALTER TABLE car_brands
ADD COLUMN car_brands_id SERIAL PRIMARY KEY;

--------------------------------------------
--Foreign Key Constraint
--------------------------------------------

insert into dependents (dependent_id, first_name, last_name, relationship, employee_id) 
values (32,'Melisa','Grant','Child', 100);

update dependents set employee_id = 21 where employee_id = 100

--DROP
ALTER TABLE dependents DROP CONSTRAINT dependents_employee_id_fey

--ADD
ALTER TABLE dependents
ADD CONSTRAINT dependents_employee_id_fkey
FOREIGN KEY (employee_id)
REFERENCES employees (employee_id);

--------------------------------------------

CREATE TABLE account_roles 
(
    user_id INT NOT NULL,
    role_id INT NOT NULL,
    grant_date TIMESTAMP,
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (role_id)
      REFERENCES roles (role_id),
    FOREIGN KEY (user_id)
      REFERENCES accounts (user_id)
);

CREATE TABLE roles
(
    role_id serial PRIMARY KEY,
    role_name VARCHAR (255) UNIQUE NOT NULL
);

CREATE TABLE accounts 
(
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(70) UNIQUE NOT NULL,
    user_password VARCHAR(50) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    created_on TIMESTAMP NOT NULL DEFAULT CURRENT_DATE,
    last_login TIMESTAMP 
);

--------------------------------------------

CREATE TABLE customers(
    customer_id SERIAL,
    customer_name VARCHAR(255) NOT NULL,
    PRIMARY KEY(customer_id)
);

CREATE TABLE contacts(
    contact_id SERIAL,
    customer_id INT,
    contact_name VARCHAR(255) NOT NULL,
    PRIMARY KEY(contact_id),
    CONSTRAINT fk_customer
        FOREIGN KEY(customer_id) 
        REFERENCES customers(customer_id)
);

INSERT INTO customers (customer_name)
VALUES('Apple'), ('Google'), ('Amazon'), ('IBM');

INSERT INTO contacts (customer_id, contact_name)
VALUES(1, 'Alex'), (2, 'Michael'), (2, 'Jane'), (3, 'Judi');

--------------------------------------------
--Foreign Key Constraint – ON DELETE
--------------------------------------------

DELETE FROM customers WHERE customer_id = 1;

--------------------------------------------
--Foreign Key Constraint – ADD-DROP
--------------------------------------------

CREATE TABLE contacts(
    contact_id SERIAL PRIMARY KEY,
    customer_id INT,
    contact_name VARCHAR(255) NOT NULL,
     CONSTRAINT fk_customer
        FOREIGN KEY(customer_id) 
        REFERENCES customers(customer_id)
);

ALTER TABLE child_table 
ADD CONSTRAINT constraint_name 
      FOREIGN KEY (fk_columns) 
      REFERENCES parent_table (parent_key_columns);

ALTER TABLE child_table
DROP CONSTRAINT constraint_fkey;

--------------------------------------------
--CHECK Constraint
--------------------------------------------

CREATE TABLE employees_new (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR (50),
    last_name VARCHAR (50),
    birth_date DATE CHECK (birth_date > '1980-01-01'),
    joined_date DATE CHECK (joined_date > birth_date),
    salary NUMERIC CHECK(salary between 5000 and 10000),
    emp_type VARCHAR(1) CHECK(emp_type in ('A', 'B', 'C'))
);

INSERT INTO employees_new (first_name, last_name, birth_date, joined_date, salary, emp_type)
VALUES('David', 'Austin', '2001-01-12', '2021-09-22', 8000, 'C');

--------------------------------------------

ALTER TABLE employees 
ADD CONSTRAINT emp_type_check 
CHECK(emp_type in ('A', 'B', 'C'));

ALTER TABLE film 
ADD CONSTRAINT rental_dur_check 
CHECK(rental_duration < 10);

--------------------------------------------
--UNIQUE Constraint
--------------------------------------------

CREATE TABLE person (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR (50),
    last_name VARCHAR (50),
    email VARCHAR (50) UNIQUE
);

CREATE TABLE person (
    id SERIAL  PRIMARY KEY,
    first_name VARCHAR (50),
    last_name  VARCHAR (50),
    email      VARCHAR (50),
    UNIQUE(email)
);

ALTER TABLE person 
ADD CONSTRAINT uq_email UNIQUE(email)

--------------------------------------------

CREATE TABLE customer_new
(
    customer_id serial NOT NULL,
    first_name character varying(45),
    last_name character varying(45),
    email character varying(50),
    address_id smallint NOT NULL,
    UNIQUE(first_name, last_name, address_id)
)

insert into customer_new(first_name, last_name, address_id)
values('Johnny', 'Depp', 1234), ('Kevin', 'Spacey', 4567);

--------------------------------------------
--NOT NULL Constraint
--------------------------------------------

CREATE TABLE person (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR (50) NOT NULL,
    last_name VARCHAR (50) NOT NULL,
    email VARCHAR (50) UNIQUE
);

ALTER TABLE customer
ALTER COLUMN first_name SET NOT NULL,
ALTER COLUMN last_name SET NOT NULL;

--------------------------------------------

INSERT INTO person (first_name, last_name, email)
VALUES
    ('Jennifer', 'Davis', NULL),
    ('Joe', 'Swank', 'joe.swank@dbhunter.com');

ALTER TABLE person
ALTER COLUMN email SET NOT NULL;

--------------------------------------------

CREATE TABLE users 
(
    id serial PRIMARY KEY,
    username VARCHAR (50),
    email VARCHAR (50),
    CONSTRAINT username_email_not_null 
    CHECK 
    (
        NOT 
        (
            ( username IS NULL  OR  username = '' )
            AND
            ( email IS NULL  OR  email = '' )
        )
    )
);

INSERT INTO users (username, email)
VALUES
    ('user1', NULL),
    (NULL, 'email1@example.com'),
    ('user2', 'email2@example.com'),
    ('user3', '');

INSERT INTO users (username, email)
VALUES
    (NULL, NULL),
    (NULL, ''),
    ('', NULL),
    ('', '');

-----------------------------------------------------
--EXERCISE ANSWERS
-----------------------------------------------------

--------------------------------------------
--Constraints
--------------------------------------------

drop table category_books;
drop table books;
drop table category;

-- Books Table:
-- book id – primary key
-- title 
-- price – value between 10 and 1000
-- author_id – not null

create table books
(
	book_id smallserial primary key,
	title varchar(200),
	price numeric(6,2) check(price between 10 and 1000),
	author_id int not null
)

alter table books
add constraint fk_author_id
	foreign key (author_id)
	references authors(author_id);
	
-- Authors Table:
-- authorId – primary key
-- first name – not null
-- last name – not null
-- email - unique
create table authors
(
	author_id smallserial primary key,
	first_name varchar(50) not null,
	last_name varchar(50) not null,
	email varchar(150) unique
)

-- Category Table:
-- category id – primary key
-- category name – not null
create table category
(
	category_id smallserial primary key,
	category_name varchar(50) not null
)

-- Category_Books Table
-- category id - foreign key references category table
-- book id - foreign key references books table
create table category_books
(
	category_id int,
	book_id int,
	constraint fk_category_id
		foreign key(category_id)
		references category(category_id),
	constraint fk_book_id
		foreign key(book_id)
		references books(book_id)
);

insert into authors (first_name,last_name, email) values
	 ('Stephen','King', 'stephen.king@abc.com'),
	 ('Agatha','Christie', 'agatha.christie@abc.com'),
	 ('Leo','Tolstoy', 'leo.tolstoy@abc.com');
	 
insert into books (title, price, author_id) values
	 ('The Shining', 11, 1), ('Nightshift', 15, 1), ('The Dead Zone', 30, 1),
	 ('The Secret Adversary', 34, 2), ('The Secret of Chimneys', 45, 2), ('The Mystery of the Blue Train', 60, 2),
	 ('Anna Karenina', 78, 3), ('War and Peace', 120, 3), ('What Is Art', 12, 3);

insert into category(category_name) values
	('Adventure stories'), ('Classics'), ('Crime'), ('Fantasy'), ('Horror'),
	('Mystery'), ('Romance'), ('Science fiction'), ('Short stories'), ('Plays')

insert into category_books values
	(1,1), (1,2),(3,2),(4,3),(4,4),(6,6),(6,7),(8,2),(9,9)
